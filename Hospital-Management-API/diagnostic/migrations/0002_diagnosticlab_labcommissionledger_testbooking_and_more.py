# Generated by Django 5.0.7 on 2025-07-06 13:54

import diagnostic.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('consultations', '0004_advice_unique_custom_advice_per_consultation'),
        ('diagnostic', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DiagnosticLab',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=100, null=True)),
                ('service_pincodes', models.JSONField(blank=True, default=list)),
                ('commission_percent', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('doctor_commission_percent', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LabCommissionLedger',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('platform_commission_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('doctor_commission_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('lab_net_earning', models.DecimalField(decimal_places=2, max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestBooking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_home_collection', models.BooleanField(default=False)),
                ('scheduled_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('SCHEDULED', 'Scheduled'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('booked_by', models.CharField(choices=[('patient', 'Patient'), ('helpdesk', 'Helpdesk')], max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestLabMapping',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('is_available', models.BooleanField(default=True)),
                ('turnaround_time', models.PositiveIntegerField()),
                ('home_collection_available', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='reports/')),
                ('is_external', models.BooleanField(default=False)),
                ('comments', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='imagingview',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='packagerecommendation',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='testcategory',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='testpackage',
            options={'ordering': ['-created_at']},
        ),
        migrations.AddField(
            model_name='imagingview',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='imagingview',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='imagingview',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='medicaltest',
            name='fasting_required',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='medicaltest',
            name='sample_required',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='medicaltest',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='packagerecommendation',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='packagerecommendation',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='testcategory',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='testcategory',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='testpackage',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='testrecommendation',
            name='category_snapshot',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='testrecommendation',
            name='lab_advised',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='testrecommendation',
            name='test_pnr',
            field=models.CharField(default=diagnostic.models.generate_test_pnr, max_length=100, unique=True),
        ),
        migrations.AddField(
            model_name='testrecommendation',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddConstraint(
            model_name='medicaltest',
            constraint=models.UniqueConstraint(condition=models.Q(('name__isnull', False)), fields=('name',), name='unique_lowercase_test_name'),
        ),
        migrations.AddConstraint(
            model_name='testrecommendation',
            constraint=models.UniqueConstraint(condition=models.Q(('test__isnull', False)), fields=('consultation', 'test'), name='unique_consultation_test'),
        ),
        migrations.AddField(
            model_name='diagnosticlab',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='labcommissionledger',
            name='lab',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diagnostic.diagnosticlab'),
        ),
        migrations.AddField(
            model_name='labcommissionledger',
            name='test',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='diagnostic.medicaltest'),
        ),
        migrations.AddField(
            model_name='testbooking',
            name='lab',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='diagnostic.diagnosticlab'),
        ),
        migrations.AddField(
            model_name='testbooking',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_bookings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='testbooking',
            name='recommendation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='diagnostic.testrecommendation'),
        ),
        migrations.AddField(
            model_name='labcommissionledger',
            name='booking',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='diagnostic.testbooking'),
        ),
        migrations.AddField(
            model_name='testlabmapping',
            name='lab',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diagnostic.diagnosticlab'),
        ),
        migrations.AddField(
            model_name='testlabmapping',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='diagnostic.medicaltest'),
        ),
        migrations.AddField(
            model_name='testreport',
            name='booking',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='diagnostic.testbooking'),
        ),
        migrations.AddField(
            model_name='testreport',
            name='uploaded_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='testbooking',
            constraint=models.UniqueConstraint(fields=('recommendation',), name='unique_booking_per_recommendation'),
        ),
        migrations.AlterUniqueTogether(
            name='testlabmapping',
            unique_together={('test', 'lab')},
        ),
    ]
