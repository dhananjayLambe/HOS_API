# Generated by Django 5.0.7 on 2025-06-19 07:14

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('doctor', '0001_initial'),
        ('patient_account', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdviceTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(help_text='Predefined lifestyle/dietary advice', max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Advice Template',
                'verbose_name_plural': 'Advice Templates',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('consultation_pnr', models.CharField(db_index=True, editable=False, max_length=10, unique=True)),
                ('prescription_pnr', models.CharField(db_index=True, editable=False, max_length=10, unique=True)),
                ('closure_note', models.TextField(blank=True, null=True)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('is_finalized', models.BooleanField(default=False)),
                ('prescription_pdf', models.FileField(blank=True, max_length=255, null=True, upload_to='prescriptions/')),
                ('tag', models.CharField(blank=True, choices=[('follow_up', 'Follow-Up'), ('critical', 'Critical'), ('review', 'Review')], help_text='Optional tag like Follow-Up, Critical, etc.', max_length=50, null=True)),
                ('is_important', models.BooleanField(default=False, help_text='Mark consultation as important')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='doctor.doctor')),
                ('patient_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='patient_account.patientaccount')),
                ('patient_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='patient_account.patientprofile')),
            ],
            options={
                'verbose_name': 'Consultation',
                'verbose_name_plural': 'Consultations',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('complaint_text', models.CharField(max_length=255)),
                ('duration', models.PositiveIntegerField(help_text='Duration in days')),
                ('severity', models.CharField(choices=[('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe')], max_length=10)),
                ('is_general', models.BooleanField(default=False)),
                ('doctor_note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='consultations.consultation')),
            ],
            options={
                'verbose_name': 'Complaint',
                'verbose_name_plural': 'Complaints',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Advice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('custom_advice', models.TextField(blank=True, help_text='Custom lifestyle/dietary advice', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('advice_templates', models.ManyToManyField(blank=True, related_name='custom_advices', to='consultations.advicetemplate')),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advices', to='consultations.consultation')),
            ],
            options={
                'verbose_name': 'Advice',
                'verbose_name_plural': 'Advices',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, help_text='ICD-10/11 code (optional)', max_length=20, null=True)),
                ('description', models.CharField(help_text='Diagnosis description', max_length=500)),
                ('location', models.CharField(blank=True, choices=[('head', 'Head'), ('left_eye', 'Left Eye'), ('right_eye', 'Right Eye'), ('nose', 'Nose'), ('throat', 'Throat'), ('chest', 'Chest'), ('left_arm', 'Left Arm'), ('right_arm', 'Right Arm'), ('abdomen', 'Abdomen'), ('back', 'Back'), ('left_leg', 'Left Leg'), ('right_leg', 'Right Leg'), ('pelvis', 'Pelvis'), ('whole_body', 'Whole Body'), ('skin', 'Skin'), ('others', 'Others')], help_text='Diagnosis location in body', max_length=20, null=True)),
                ('diagnosis_type', models.CharField(choices=[('suspected', 'Suspected'), ('confirmed', 'Confirmed'), ('rule_out', 'Rule Out'), ('follow_up', 'Follow-up')], default='confirmed', help_text='Type of diagnosis', max_length=20)),
                ('is_general', models.BooleanField(default=False, help_text='Selected from predefined general diagnosis list')),
                ('doctor_note', models.TextField(blank=True, help_text='Internal notes for doctor', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnoses', to='consultations.consultation')),
            ],
            options={
                'verbose_name': 'Diagnosis',
                'verbose_name_plural': 'Diagnoses',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Rating from 1 to 5')),
                ('comments', models.TextField(blank=True, help_text='Optional comment by patient', null=True)),
                ('is_anonymous', models.BooleanField(default=False, help_text="Hide patient's identity if True")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('consultation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient_feedback', to='consultations.consultation')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedbacks_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Patient Feedback',
                'verbose_name_plural': 'Patient Feedbacks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Vitals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height_cm', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('pulse', models.IntegerField(blank=True, null=True)),
                ('blood_pressure', models.CharField(blank=True, max_length=10)),
                ('temperature_c', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('consultation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vitals', to='consultations.consultation')),
            ],
        ),
    ]
